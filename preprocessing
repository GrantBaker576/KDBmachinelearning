oneHotEncoder:{[table]
    //Create Dummy variables out of categorical:
    //table--takes only table with only categorical variables(symbols), cannot start with number
    table:`$string table; //converts table to string, then symbol. Helps feed numerical categorical variables 
    newColumns: {?[`table;();();x]}each exec cols table from table; // list of new columns, not distinct
    /creates nondistinct list of symbol entries
    Entries:{count newColumns[x]}each til count cols table;
    stringColumns:string each cols table;
    stringEntries:string each raze newColumns;
    counter: 1+count cols table;
    counter2:0;
    newCols:();
    while[counter-:1;newCols,: stringColumns[counter2],/: Entries[counter2]#stringEntries;stringEntries:Entries[counter2]_stringEntries;counter2+:1];
    backupColumnList:newCols:`$newCols;
    //replaces table entries with new column names
    columnList:cols table;
    counter: 1+count cols table;
    counter2:0;
    //adds name of column to table entries
    while[counter-:1;@[`table;columnList[counter2];:;(count table)#newCols];newCols:(count table)_newCols;counter2+:1];
    
    //section creates comparative table for boolean later
    uniqueColumnList:distinct backupColumnList;
    //create and populate a table with dummy values and dummy variables
    dummytable:flip uniqueColumnList!(flip (count table)#(enlist (count uniqueColumnList)#`sym));
    dummytable2:0#dummytable;
    //populate dummytable entries with its own column names
    dummytable:{![dummytable;();0b;x!enlist'[x:(),x]]}cols dummytable;
    
    colsTable:cols table; //list of categorical variables
    distinctEntries:count each distinct each table[cols table]; //list of distinct entries per variable
    take:distinctEntries*count table; // list, unique entries for each column * number of rows
    shape:(sum distinctEntries ; count table); //number of columns, rows for final table
    dummytable2:(dummytable2 upsert (flip (shape)#raze(take # ' {?[`table;();();x]}each cols table)));
    CompleteDisjunctivetable:1*dummytable=dummytable2;
    :CompleteDisjunctivetable;
    };
